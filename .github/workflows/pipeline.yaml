name: Deploy via Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Debugging Steps Start ---
      - name: List files in root directory
        run: ls -la

      - name: List files in src/main/resources/nginx/
        run: ls -la src/main/resources/nginx/

      - name: List files in src/main/resources/nginx/sites-enabled/
        run: ls -la src/main/resources/nginx/sites-enabled/
      # --- Debugging Steps End ---

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pork:latest

      - name: Debug List files before SCP
        run: |
          pwd
          ls -l
          ls -l src/main/resources/nginx/
          ls -l src/main/resources/nginx/sites-enabled/
  
      - name: Copy compose.yaml and nginx configs to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: |
            compose.yaml
            src/main/resources/nginx/nginx.conf
            src/main/resources/nginx/sites-enabled
          target: "/home/${{ secrets.VPS_USER }}/pork-backend/"

      - name: Deploy on VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/pork:latest
            cd /home/${{ secrets.VPS_USER }}/pork-backend/
            docker compose down || true
            docker compose up -d --remove-orphans
