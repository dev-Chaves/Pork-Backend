services:

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${NGINX_CONF_PATH}:/etc/nginx/nginx.conf:ro
      - ${LOAD_BALANCER_CONF_PATH}:/etc/nginx/sites-enabled:ro
    # depends_on:
    #   api:
    #     condition: service_healthy
    restart: on-failure

  api:
    image: financepork/pork:latest
    build: .
    deploy:
      replicas: 2
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRESQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRESQL_PASSWORD}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      SPRING_SECRET: ${SECRET}
    restart: on-failure
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 40s

  db:
    image: 'postgres:latest'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRESQL_USER} -d ${POSTGRESQL_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

volumes:
  pgdata:
