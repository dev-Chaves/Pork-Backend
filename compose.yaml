services:

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./src/main/resources/nginx/nginx.config:/etc/nginx/nginx.conf:ro
      - ./src/main/resources/nginx/sites-enabled:/etc/nginx/sites-enabled:ro
    depends_on:
      api:
        condition: service_healthy

  api:
    build: .
    ports:
      - "8080:8080"
    deploy:
      replicas: 2
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRESQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRESQL_PASSWORD}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      SPRING_SECRET: ${SECRET}
  db:
    image: 'postgres:latest'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRESQL_USER} -d ${POSTGRESQL_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata: