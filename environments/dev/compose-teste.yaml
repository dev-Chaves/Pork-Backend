services:
  nginx:
    build:
      context: ../..
      dockerfile: environments/dev/Dockerfile.nginx.teste
    ports:
      - "80:80"
    depends_on:
      - api1
      - api2
    restart: on-failure
    command: "/bin/sh -c 'nginx -g \"daemon off;\"'"

  api1:
    image: financepork/pork:latest
    build:
      context: ../..
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRESQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRESQL_PASSWORD}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      SPRING_SECRET: ${SECRET}
    restart: on-failure

  api2:
    image: financepork/pork:latest
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRESQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRESQL_PASSWORD}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      SPRING_SECRET: ${SECRET}
    restart: on-failure

  db:
    image: 'postgres:latest'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRESQL_USER} -d ${POSTGRESQL_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"

volumes:
  pgdata:
